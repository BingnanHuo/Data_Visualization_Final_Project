
---
title: "Confidence Level Project"
author: "Shishir Katta, Nick Huo, Yida Chen"
date: '2022-04-07'
output: pdf_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Install all libraries

```{r}
install.packages("ggplot2")
```

```{r}
library(ggplot2)
```

## 1 Welcome to our introduction of Confidence Level!\
In this project, we will cover the concepts of repeated sampling, confidence levels and intervals. We will introduce the concepts through both the texts and visualizations. 

Before reaching these goals, we need to review several key concepts that are fundamental for the study of confidence levels.

### 1.1 Sampling Distribution

The sampling distribution is the probability distribution of a statistic (e.g. mean) calculated from different experiments. Each experiment will randomly draw a number of samples from the population. All data of the population have the same probability of being chosen by the experiment.

### 1.2 Central Limit Theorem 

Why is sampling distribution important? According to the Central Limit Theorem (CLT), if we have random samples, $X_1, \ X_2, \dots, X_n$, from a population with mean $\mu$ and standard deviation $\sigma$, and if the sample size $n$ is sufficiently large, then the distribution of the sample mean $\bar{x}$ is approximately normal with mean $\mu$ and standard deviation $\frac{\sigma}{\sqrt{n}}$.

$$\bar{X} \approx \mathcal{N}\left(\mu, \frac{\sigma}{\sqrt{n}}\right)$$

This is true regardless the shape of the population distribution. In other words, the shape of sampling distribution of $\bar{X}$ will be approximately normal (for large sample size $n$) even if the population distribution is not.

## 2. What are the confidence level and confidence interval?

After this quick review of the sampling distribution and CLT, we now can start our exploration of confidence level and interval.

What are the confidence level and interval? In simple words, the confidence level represents the proportion of the time that its associated interval calculated from samples will capture the true parameters, namely, the success rate. For example with a 90% confidence interval for the mean, you would expect the intervals calculated from the 90% of experiments with $n$ random samples will cover the true population mean.

A confidence interval is useful when we want to find a possible range of a population parameter but only a sample of the population is available. We use the sampled observations, which may be a good approximation of population distribution, to estimate a possible range for the true parameter. 

The population parameter (e.g. mean or median) is a fixed value, but the sample statistic is a random variable because we are uncertain about its value before obtaining the samples. Thus, the intervals calculated with sample statistics may or may not contain the true parameter. The intervals' long-run success rate of capturing true parameters is determined by their confidence level.

## 3. Understanding intervals
The confidence interval is a range of possible values for a population parameter. It is calculated from a set of samples. For a confidence interval of mean, the interval uses the sample mean as the center and two equal-length sides, $\mu\ \pm$ Margin of Error. 

To calculate the confidence interval, we need several measurements of samples and some information about the population:

1. The sample mean $\mu$
2. The sample size $n$
3. Whether the population distribution is normal
4. If so, what is the standard deviation of the population
5. Finally, what is the confidence level for the interval

After learning all the information above, we can calculate the confidence interval using the formula below:

$$\mu\ \pm\ Z_{\alpha/2}\ \times \frac{\sigma}{\sqrt{n}}$$

The $Z_{\alpha/2}$ is the critical value of normal distribution. The alpha level $\alpha$ can be calculated by $(100 - c) / 100$ where $c\ \%$ is the confidence level of the interval. The critical value $Z_{\alpha/2}$ is the value of standard normal distribution, $Z \sim \mathcal{N}(0, 1)$, where $P(Z \geq Z_{\alpha/2}) = (1 - confidence\ level) / 2$. 

As shown in this formula, the location of an interval may vary as the sample means can be different among experiments. Furthermore, the width of the interval (margin of error) is affected by three factors: (1) the sample size, (2) the standard deviation of the population, and (3) and the confidence level.

The interval will shrink if we have a larger sample size as our sample distribution is more likely to represent the true distribution. Similarly, if the population has a small variance (small standard deviation $\sigma$), then our sample statistic is also more likely to capture the true parameter. Thus, we will have a smaller interval for a smaller population standard deviation $\sigma$. Finally, if we have a lower confidence level (smaller $Z_{\alpha/2}$), the interval will become narrower since we expect fewer intervals to cover the true parameter in the long run.

Vice Versa, we will have a wider confidence interval for a smaller sample size $n$, a larger population standard deviation $\sigma$, or a higher confidence level (smaller alpha level and larger $Z_{\alpha/2}$).

## 4. Confidence Interval: A practical estimation of population parameter 

Why is confidence interval so important? Let's assume we want to figure out the average height of a male adult living in France with ages between 25 and 50. One way to do this is to send a survey to all French male adults. However, we will find it is impossible or at least impractical to conduct this survey. We may not find every French male adult, and not everyone is interested in filling our survey. Instead, we can distribute our survey to a small group of people at a shopping mall in Paris. If our sample size is large enough (like a few hundred), then we can make a good estimate of the average French male height using the confidence interval calculated from our sampled observations.  

In most cases, measuring a confidence interval from a sample is much more cost-effective and practical compared with measuring the population parameter.

## 5. Repeated Sampling from a Normal Distribution and Confidence Interval Visualizations

To study the confidence interval, we will conduct the repeated sampling from a normal distribution with mean of 0 and standard deviation, $Z \sim \mathcal{N}\left(0, \ 1\right)$ with sample size $n=50$. We plan to repeat the sampling 10000 times and calculate the 95%, 90%, and 80% confidence intervals for each experiment. Several visualizations will help you understand the central limit theorem (**CLT**) and see the effect of confidence level on accuracy and width of intervals. 

**We use the following function to conduct the confidence interval experiments:**

The `conf_int` function takes in the sample mean (`x_bar`), S.D. of the population (`sd`), sample size (`n`), and the confidence level (`conf_level`), and it outputs the (lower bound, upper bound) of the calculated confidence interval.

The confidence interval is calculated using this formula $\bar{X} \pm Z_{\alpha/2} \times \frac{\sigma}{\sqrt{n}}$ where $\bar{X}$ is the sample mean, $\sigma$ is the population standard deviation, $n$ is the sample size, and $Z_{\alpha/2}$ is the critical value. The $\alpha$ is $(100\% - confidence~level) / 2$. We can calculate the $Z_{\alpha/2}$ using the `qnorm((1 - confidence level) / 2, lower.tail=FALSE)` function which gives us the quantile value $q$ of a normal distribution $Z$ where $P(Z \geq q) = (1 - confidence\ level) / 2$.

The `experiment` function will do repeated sampling from the normal distribution and compute the confidence interval from each sampling experiment. The function takes in the mean (`avg`) and standard deviation (`pop_std`) of the normal distribution, the number of the repeated experiments (`num_exp`), the number of samples to use (`num_sample`), and confidence level (`confidence_level`). The function will return all calculated confidence intervals in a matrix in which the first column is lower bound and the second column is upper bound. The `confidence_level` argument can be a single value or a vector of confidence level. 

The `create_ci_plot` function takes in a data frame of n repeated experiments with calculated confidence intervals. The function will return a confidence interval plot where the sample means of each experiment are plotted in a scatter plot and the associated confidence intervals are plotted as error bars. The colors of the point and error bar represent if the confidence interval covers the population mean. The function also requires the `population`, `plot_title`, `ymin`, `ymax`, and `ytitle` as input arguments. 

The `create_dis_plot` function takes a data frame of n repeated experiments with whether their calculated interval covers the true mean. The function will return a density plot of sample means. The portion of sample means from the experiments that cover the true mean with its confidence interval will be marked in green. The portion of sample means from the experiments that miss the true mean will be marked in red.

```{r}
# Function for calculating the confidence interval
# The function returns a vector of 
# (lower CI bound, upper CI bound)
conf_int <- function(x_bar, sd, n, conf_level) {
  z_crit <- qnorm((1-conf_level)/2, lower.tail = F)
  ME <- z_crit*sd/sqrt(n)
  CI <- c(x_bar-ME, x_bar+ME)
  return(CI)
}

# Function for doing repeated sampling experiments
# The function returns a matrix of confidence intervals
# calculated from each experiment
experiment = function(avg, pop_std, num_exp, num_sample, confidence_level) {
  lb = NULL
  ub = NULL
  for (i in 1:num_exp) {
    samp = rnorm(num_sample, avg, pop_std) 
    sample_mean = mean(samp)
    if (length(confidence_level) > 1) {
      for (j in 1:length(confidence_level)) {
        res = conf_int(sample_mean, pop_std, num_sample, confidence_level[j])
        lb[i + (j - 1) * num_exp] = res[1]
        ub[i + (j - 1) * num_exp] = res[2]
      }
    } else {
      res = conf_int(sample_mean, pop_std, num_sample, confidence_level)
      lb[i] = res[1]
      ub[i] = res[2]
    }
  }
  CI.mat = cbind(lb, ub)
  return(CI.mat)
}

# Function for creating a confidence interval plot
# The function returns a scatter plot of sample mean
# with their confidence interval plotted as an error bar
# around each dot
create_ci_plot = function(df, pop_mean, plot_title, ymin, ymax, ytitle) {
  p <- ggplot(data=df, aes(x=nth_exp, y=sample_mean)) +
      geom_point(aes(color=if_success, 
                     alpha=abs(sample_mean-pop_mean)^(1/3))) +
      geom_errorbar(aes(ymin=lb, ymax=ub, color=if_success,
                        alpha=abs(sample_mean-pop_mean)^(1/3)), 
                    width=1.2) +
      geom_line(aes(x=nth_exp, y=pop_mean, color="True Mean")) +
      xlab("Nth Experiment") +
      ylab(ytitle) +
      ylim(ymin, ymax) +
      labs(title=plot_title,
           color = "Whether Covers\nTrue Mean") +
      guides(alpha="none") +
      theme(axis.text.x = element_text(angle = 45, hjust=1)) +
      scale_color_manual(values=c("#57E119", "#F25B4F", "#56B4E9"))
  return(p)
}

# Function for creating a sampling distribution plot
# The function will return a density plot of sample mean
# from all experiments. The sample means will be marked in
# red if their corresponding confidence intervals fail to
# capture the true mean.
# The sample means of which the confidence intervals capture
# the true mean will be marked in green.
create_dis_plot = function(df, plot_title, rate_vec) {
  p <- ggplot(df, aes(x=sample_mean)) + 
       geom_density(aes(x=sample_mean, 
                        fill=paste("Captured", 
                                   rate_vec[1])),
                    alpha=0.6) +
       guides(alpha="none") +
       labs(title = plot_title) +
       xlab("Sample Mean") +
       scale_fill_manual(values=c("#57E119", "#F25B4F"))
  
  d <- ggplot_build(p)$data[[1]]
  
  lower_bound = max(df$sample_mean[df$sample_mean < 0 & 
                                        df$if_success=="Missed"])
  upper_bound = min(df$sample_mean[df$sample_mean > 0 & 
                                        df$if_success=="Missed"])
  p <- p + geom_area(data = subset(d, x > upper_bound), 
                     aes(x=x, y=y, fill=paste("Missed", rate_vec[2]))) +
       geom_area(data = subset(d, x < lower_bound), 
                     aes(x=x, y=y, fill=paste("Missed", rate_vec[2]))) +
       labs(fill="Experiments") +
       ylab("Density")
  
  return(p)
}    
```

In this example, we sample from a normal distribution with mean of 0 and standard deviation of 1, $Z \sim \mathcal{N}\left(0, \ 1\right)$. We conduct the sampling with size $n=50$ for 10000 times. We expect the resulting sampling distribution will have a mean of 0 and standard deviation of $\frac{1}{\sqrt(50)} = 0.141$, $\bar{X} \sim \mathcal{N}\left(0, 0.141\right).$ $\bar{X}$ is the sample mean.  

```{r}
# Using a nor
set.seed(230)
num_exp = 10000
num_sample = 50
pop_mean = 0
pop_std = 1
CI.mat = experiment(pop_mean, pop_std, num_exp, num_sample, c(0.80, 0.90, 0.95))
```

In the cell below, we check if a confidence interval covers the population mean, and we create a data frame with 6 variables:

- `nth_exp`: The index of the experiment
- `sample_mean`: The sample mean of each experiment
- `lb`: Lower bound of the confidence interval
- `ub`: The upper bound of the confidence interval
- `if_success`: Whether the interval covers the population mean
- `confidence_level`: The confidence level of the interval

```{r}
success = 0
if_success = NULL
for (i in 1:length(CI.mat[, 1])) {
  if (CI.mat[i, 1] <= pop_mean &
      mean(pop_mean) <= CI.mat[i, 2]) {
    success = success + 1
    if_success[i] = "Captured"
  } else {
    if_success[i] = "Missed"
  }
}

level = c(rep("80%", num_exp), rep("90%", num_exp), rep("95%", num_exp))

level = factor(level, levels = c("80%", "90%", "95%"), ordered=TRUE)

if_success = factor(if_success)

df = data.frame(nth_exp=rep(1:num_exp, rep=length(level)), 
                sample_mean=(CI.mat[, 1] + CI.mat[, 2]) / 2, 
                lb=CI.mat[, 1], ub=CI.mat[, 2],
                if_success=if_success,
                confidence_level = level)


print(paste("Mean of the sample means is", 
            round(mean(df$sample_mean), 3)))
print(paste("Standard deviation of the sample means is",
            round(sd(df$sample_mean), 3)))

df_95 = df[df$confidence_level == "95%",]
print("Summary for experiments using 95% confidence level")
summary(df_95[, c(2, 3, 4, 5)])

df_90 = df[df$confidence_level == "90%",]
print("Summary for experiments using 90% confidence level")
summary(df_90[, c(2, 3, 4, 5)])

df_80 = df[df$confidence_level == "80%",]
print("Summary for experiments using 80% confidence level")
summary(df_80[, c(2, 3, 4, 5)])
```

As the experiments show, the mean of the sample means from the 10000 sampling experiments is 0.002 and the standard deviation is 0.142, which are close to the theoretical values calculated using CLT.

From the summary, we can also find that the confidence interval (CI) becomes smaller as we decrease the confidence level. The median lower and median upper bounds for the CI with a 95% confidence level are -0.2786 and 0.2758. For the 90% confidence level, the median lower and upper bounds become -0.2340 and 0.2312. As we decrease the confidence level to 80%, the median lower and upper bounds are -0.1826 and 0.1799.

### 5.1 Distribution of lower and upper bounds of confidence intervals

Below, we show a density plot of the lower and upper bounds of intervals with different confidence levels. We can see that the gaps between the average lower and upper bounds of CI decrease as we decrease the confidence level.

```{r}
ggplot(data=df) +
  geom_density(aes(x=lb, fill=confidence_level), alpha=0.6) +
  geom_density(aes(x=ub, fill=confidence_level), alpha=0.6) +
  ylim(0, 5) +
  xlab("") +
  labs(title="Distribution of Lower and Upper Bounds of CI\nfrom 10000 experiments",
       fill="Confidence Level")
```

### 5.2 The success rate of intervals with different confidence levels

The success rate of intervals also decreases as the confidence level drops. Among 10000 experiments, we missed the true mean by 522 times (5% of all experiments) using 95% confidence intervals, by 1002 times (10% of all experiments) using 90% confidence intervals, and by 2015 times (20% of all experiments) using 80% confidence intervals.


Below is a success rate table:

```{r}
print("Success rate table:")
rate_table = round(prop.table(table(level, if_success), 
                              margin=1), 
                   digits = 3)
rate_table
```

The results we get are consistent with the definition of confidence level. In the long run, an n% confidence interval will capture the true parameters approximately n% of the time.

### 5.3 95% Confidence Interval

Below we show a density plot of the sample means from 10000 experiments. We marked the portion that captures the true mean with a 95% confidence interval in green, and we paint the portion that misses the true mean in red.

```{r}
create_dis_plot(df_95,
                "Distribution of Sample Means\nwith 10000 experiments of 50 samples\nfrom a Normal Distribution (mu=0, sd=1)",
                rate_table[3, ])
```

As the plot shows, the distribution of sampling mean has a shape of a normal distribution with a mean of 0. About 5.2% of the experiments miss the true mean using the 95% confidence intervals.

To further investigate how confidence level affects the interval's success rate (accuracy) and width, we create the following scatter plot with error bars.

To generate this plot, we **randomly select 100** experiments. We plot the sample mean of each experiment using a scatter plot and its 95%, 90%, and 80% confidence intervals using error bars. The experiments that capture the true mean (blue horizontal line) are marked in green, and the experiments that miss the true mean are marked in red.

We fix the scale of the y axis so you can observe how the interval width decreases as we reduce the confidence levels. You will also find more misses when the interval width decreases.

```{r}
set.seed(189)
random_100 = sample(nrow(df_95), 100)
df_95_sub = df_95[random_100, ]
df_95_sub$nth_exp = 1:100
missed = sum(df_95_sub$if_success == "Missed")
success = 100 - missed
create_ci_plot(df_95_sub, 
               0,
               plot_title = paste("95% Confidence Interval of 100 Experiments",
                                  "\nMissed", missed, ", Success", success),
               ytitle = "Sample Mean",
               0.7,
               -0.7)
```

We use the variable opacity (`alpha`) when plotting the confidence interval. If the center of a confidence interval is farther from the population mean, the confidence interval will have a higher opacity (`alpha`). This will help us highlight the experiments in which the confidence interval will miss the true mean if we further decrease the confidence level.

### 5.4 90% Confidence Interval

What will happen if we drop the confidence level from 95% to 90%?

As shown in the sampling distribution plot below, a 90% confidence interval will have a lower success rate of capturing the population mean. About 10% of the experiments fail to capture the true mean.

```{r}
df_90 = df[df$confidence_level == "90%",]

create_dis_plot(df_90, 
                "Distribution of Sample Means\nwith 10000 experiments of 50 samples\nfrom a Normal Distribution (mu=0, sd=1)",
                rate_table[2, ])
```

The accuracy drops because the confidence interval is shrinking. Eight more experiments that previously captured the true mean with 95% confidence intervals now miss it because the width of their interval shrinks.

```{r}
df_90_sub = df_90[random_100, ]
df_90_sub$nth_exp = 1:100
missed = sum(df_90_sub$if_success == "Missed")
success = 100 - missed
create_ci_plot(df_90_sub, 
               0,
               plot_title = paste("90% Confidence Interval of 100 Experiments",
                                  "\nMissed", missed, ", Success", success),
               ytitle = "Sample Mean",
               0.7,
               -0.7)
```

### 5.5 80% Confidence Interval

As we keep decreasing the confidence level, about 2000 out of 10000 experiments now miss the true mean with their 80% confidence interval.

```{r}
df_80 = df[df$confidence_level == "80%",]

create_dis_plot(df_80, 
                "Distribution of Sample Means\nwith 10000 experiments of 50 samples\nfrom a Normal Distribution (mu=0, sd=1)", 
                rate_table[1, ])
```

The width of the confidence interval also decreases. For the same 100 randomly selected experiments, 19 of them miss the true mean as their interval width shrinks.

```{r}
df_80_sub = df_80[random_100, ]
df_80_sub$nth_exp = 1:100
missed = sum(df_80_sub$if_success == "Missed")
success = 100 - missed
create_ci_plot(df_80_sub, 
               0,
               plot_title = paste("80% Confidence Interval of 100 Experiments",
                                  "\nMissed", missed, ", Success", success),
               ytitle = "Sample Mean",
               0.7,
               -0.7)
```

### 5.6 Confidence Level's Effect on Interval Width

Let's look closely at the confidence level's effect on interval width. We randomly select 6 experiments and plot their 95%, 90%, and 80% confidence intervals in pastel purple, pastel yellow, and mint brackets respectively. We scale the widths of brackets based on their confidence levels so you can directly observe their difference even if they are overlaid.

```{r}
random_exp = sample(1:num_exp, 6)
random_exp = c(random_exp, 
               random_exp + num_exp,
               random_exp + 2 * num_exp)
df_sub = df[random_exp,]
df_sub = df_sub[nrow(df_sub):1,]
df_sub$nth_exp = rep(1:6, times=3)

p <- ggplot(data=df_sub, aes(y=nth_exp, x=sample_mean)) +
      geom_point(size=4) +
      geom_errorbar(aes(xmin=lb, xmax=ub, 
                        color=confidence_level,
                        size=confidence_level), 
                    width=0.5, alpha=0.9) +
      geom_line(aes(y=nth_exp, x=pop_mean, 
                    color="True Mean"),
                size=2) +
      xlab("Sample Mean") +
      ylab("Nth Experiment") +
      labs(title="Confidence Level's Effect on\nInterval Width",
           color = "Confidence Level") +
      guides(size="none") +
      scale_size_manual(values=c(1, 2, 3)) +
      scale_color_brewer(palette = "Set3")
p + aes(group=rev(confidence_level))
ggsave("df_sub.png")
```

We can observe that the width of the interval increases as the confidence level becomes higher. This is expected because a wider width interval will have a higher frequency of covering the true parameter in the long run. As we learned from the previous scatter plots of 100 experiments, more experiments missed the true mean when their confidence intervals became narrower.

## 6. Future Work

We will turn the visualizations of the sampling distributions and confidence intervals plots (sec 5.3) into interactive applications in the next stage of this project.

Below are a few sketches of our application designs:

![Application Design](image1.jpg)

Confidence Interval Plots: Our design of the interactive confidence interval plots is in the upper part of our sketch. For this visualization, we will have a slide bar to allow users to adjust the confidence level and see how it affects the interval width (shrinking or enlarging) and the success rate (more or fewer intervals cover the true mean).

Sampling Distribution Plots: Our design of the sampling distribution plots is in the lower part of our sketch. For this visualization, we will have two slide bars (or input boxes) for users to adjust the sample size, $n$, and population standard deviation, $\sigma$. This will help users to visualize how $n$ and $\sigma$ affect the shape of a sampling distribution as illustrated in the central limit theorem. We will also have a slide bar for the confidence level. The proportion of the sample means of which the associated intervals to capture the true parameter will be shaded in red. As users adjust the confidence level, they will observe how the red area shrinks or enlarges proportionally with the new confidence level.

## 7. Real Life Usage & Examples

Remember that confidence intervals are used to give a range as an estimate for an unknown population parameter, which is often the mean or the standard deviation. In real life, confidence intervals are used a lot when we try to gain insight into properties, like the mean and the SD, about the population in a cost-efficient way or when taking a census (sampling every individual in the population) isn’t possible.

Example 1: Biology Confidence intervals are often used in biology to estimate the mean height, weight, width, diameter, etc. of different plant and animal species. For example, a biologist may be interested in measuring the mean weight of a certain species of frog in Australia. Since it would take too long to go around and weigh thousands of individual frogs, the biologist may instead collect a simple random sample of 50 frogs and measure the mean and standard deviation of the frogs in the sample. She could then use the sample mean and sample standard deviation to construct an interval for the true mean of the frogs in the entire population. 

Example 2: Clinical Trials Confidence intervals are often used in clinical trials to determine the mean change in blood pressure, heart rate, cholesterol, etc. produced by some new drug or treatment. For example, a doctor may believe that a new drug is able to reduce blood pressure in patients. To test this, he may recruit 20 patients to participate in a trial in which they used the new drug for one month. At the end of the month, the doctor may record the mean decrease in blood pressure and the standard deviation of the decrease in each patient in the sample. 15 Students Weekday Sleep (hours) 0 25 50 75 100 He could then use the sample mean and sample standard deviation to construct an interval for the true mean change in blood pressure that patients are likely to experience in the population. 

Example 3: Polling Confidence intervals are used in polling to gauge voter support for laws or taxes at the local, state, or national level. Let’s say we want to find the percentage of city voters that support a property tax increase to build a new police station. To save time, we can poll a small group of citizens (rather than the entire city’s population) and find a confidence interval. Using a 95% confidence interval, we might find a range of (62%, 68%). This can tell us that, with 95% confidence, a majority (more than 50%) of the city’s voters support certain policies. 

References:  
[https://www.statology.org/confidence-interval-real-life-example/](https://www.statology.org/confidence-interval-real-life-example/)  
[https://www.quora.com/Where- are-confidence-intervals-used-in-real-life](https://www.statology.org/confidence-interval-real-life-example/)


